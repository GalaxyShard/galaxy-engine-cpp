if (CMAKE_SYSTEM_NAME MATCHES "iOS")
    set(CMAKE_OSX_DEPLOYMENT_TARGET "11.0" CACHE STRING "")
    set(CMAKE_OSX_SYSROOT "iphoneos" CACHE STRING "")
    set(CMAKE_OSX_ARCHITECTURES "arm64" CACHE STRING "")
endif()
include(initialize.cmake)

#project("Galaxy Engine" LANGUAGES C CXX OBJC OBJCXX)
project("Galaxy Engine")
cmake_minimum_required(VERSION 3.19.7, FATAL_ERROR)
set(CMAKE_CXX_STANDARD 17)

set(proj_dir ${CMAKE_CURRENT_LIST_DIR})
set(src_dir ${proj_dir}/src)

include_directories(${proj_dir}/src)
include_directories(${proj_dir}/include)

#add_definitions(-DDEBUG)
#add_definitions(-DCMAKE_BUILD_TYPE=Debug)
#add_definitions(-g)
add_definitions(-O3)

add_definitions(-DGL_SILENCE_DEPRECATION)
add_definitions(-DGLES_SILENCE_DEPRECATION)
add_definitions(-DGLFW_INCLUDE_GLCOREARB)
add_definitions(-DOPENAL_DEPRECATED=)

message("Platform: ${CMAKE_SYSTEM_NAME}")
if (CMAKE_SYSTEM_NAME MATCHES "Emscripten")
    set(EMSCRIPTEN 1)
endif()

if (EMSCRIPTEN)
    #set(CMAKE_EXECUTABLE_SUFFIX ".html")
    add_library(engine STATIC ${ENGINE_SRC})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lopenal")
endif()

if (APPLE)
    add_library(engine STATIC ${ENGINE_SRC})
    macro(add_fw fwname)
        target_link_libraries(engine "-framework ${fwname}")
    endmacro(add_fw)

    if (IOS)
        add_definitions(-fembed-bitcode)
    else()
        add_fw(Cocoa)
        add_fw(IOKit)
        add_fw(OpenGL)
        add_fw(OpenAL)
    endif()
endif()
if ((APPLE AND NOT IOS) OR WIN32)
    target_link_libraries(engine ${proj_dir}/lib/libglfw3.a)
endif()
